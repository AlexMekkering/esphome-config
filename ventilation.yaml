---
substitutions:
  device: ventilation
  name: Ventilatie
  reboot_timeout: 7d

esphome:
  name: ${device}
  platform: ESP8266
  board: esp01_1m
  board_flash_mode: dout

wifi:
  ssid: !secret home_wifi_ssid
  password: !secret home_wifi_password
  fast_connect: true
  reboot_timeout: ${reboot_timeout}
  ap:
    ssid: ${device}
    password: !secret api_password

api:
  password: !secret api_password
  reboot_timeout: ${reboot_timeout}

logger:
  level: INFO

ota:

web_server:

status_led:
  pin:
    number: GPIO15

sensor:
  - platform: wifi_signal
    name: ${name} WiFi Signal
  - platform: uptime
    id: uptime
  - platform: hlw8012
    sel_pin: 5
    cf_pin: 14
    cf1_pin: 13
    current:
      name: ${name} Current
    voltage:
      name: ${name} Voltage
    power:
      name: ${name} Power
    update_interval: 60s

text_sensor:
  - platform: version
    name: ${name} ESPHome Version
  - platform: template
    name: ${name} Uptime
    icon: mdi:timer
    lambda: |-
      int up = id(uptime).state;
      char result[16];
      sprintf(result, "%dd %02d:%02d:%02d", up / 86400, (up % 86400) / 3600,
                                            (up % 3600) / 60, up % 60);
      return std::string(result);

binary_sensor:
  - platform: status
    name: ${name} Status
  - platform: gpio
    id: button_1
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      then:
        - fan.toggle: fan

output:
  - platform: gpio
    pin: GPIO12
    id: relay_1

fan:
  - platform: binary
    name: ${name}
    output: relay_1
    id: fan

switch:
  - platform: restart
    name: ${name} Restart
