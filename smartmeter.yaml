---
substitutions:
  device: smartmeter
  name: Smartmeter

esphomeyaml:
  name: ${device}
  platform: ESP8266
  board: nodemcuv2
  includes:
    - smartmeter.h

wifi:
  ssid: !secret home_wifi_ssid
  password: !secret home_wifi_password
  domain: !secret home_domain
  fast_connect: true
  reboot_timeout: 5min

api:
  password: !secret api_password

logger:
  level: INFO

ota:

web_server:

status_led:
  pin:
    number: D4
    inverted: true

switch:
  - platform: restart
    name: ${name} Restart

binary_sensor:
  - platform: status
    name: ${name} Status

sensor:
  - platform: wifi_signal
    name: ${name} WiFi Signal
  - platform: uptime
    id: uptime
  - platform: dht
    model: DHT22
    pin: GPIO14
    temperature:
      name: Meterkast Temperatuur
    humidity:
      name: Meterkast Luchtvochtigheid
  - platform: custom
    lambda: |-
      auto smartmeter_sensor = new SmartMeterSensor(
          (char *)"Smartmeter Power Consumption", 12, 10000, 1000.0);
      App.register_component(smartmeter_sensor);
      return {smartmeter_sensor};
    sensors:
      name: ${name} Power Consumption

text_sensor:
  - platform: version
    name: ${name} ESPHome Version
  - platform: template
    name: ${name} Uptime
    icon: mdi:timer
    lambda: |-
      int up = id(uptime).state;
      char result[16];
      sprintf(result, "%dd %02d:%02d:%02d", up / 86400, (up % 86400) / 3600,
                                            (up % 3600) / 60, up % 60);
      return std::string(result);
